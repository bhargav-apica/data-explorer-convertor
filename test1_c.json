{
    "header": {
        "dateTimeRange": true,
        "dropdowns": []
    },
    "tabs": [
        {
            "key": "test1",
            "order": 1,
            "queriesList": [
                {
                    "name": "Pressure - CPU query",
                    "options": {
                        "description": "Pressure - CPU query",
                        "order": 1,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_pressure_cpu_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure - Mem query",
                    "options": {
                        "description": "Pressure - Mem query",
                        "order": 2,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_pressure_memory_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure - I/O query",
                    "options": {
                        "description": "Pressure - I/O query",
                        "order": 3,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_pressure_io_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Busy query",
                    "options": {
                        "description": "CPU Busy query",
                        "order": 4,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "100 * (1 - avg(rate(node_cpu_seconds_total{mode=\"idle\", instance=\"$node\"}[$__rate_interval])))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sys Load query",
                    "options": {
                        "description": "Sys Load query",
                        "order": 5,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "scalar(node_load1{instance=\"$node\",job=\"$job\"}) * 100 / count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "",
                    "options": {
                        "description": "",
                        "order": 6,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "((node_memory_MemTotal_bytes{instance=\"$node\", job=\"$job\"} - node_memory_MemFree_bytes{instance=\"$node\", job=\"$job\"}) / node_memory_MemTotal_bytes{instance=\"$node\", job=\"$job\"}) * 100&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "",
                    "options": {
                        "description": "",
                        "order": 7,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "(1 - (node_memory_MemAvailable_bytes{instance=\"$node\", job=\"$job\"} / node_memory_MemTotal_bytes{instance=\"$node\", job=\"$job\"})) * 100&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "SWAP Used query",
                    "options": {
                        "description": "SWAP Used query",
                        "order": 8,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "((node_memory_SwapTotal_bytes{instance=\"$node\",job=\"$job\"} - node_memory_SwapFree_bytes{instance=\"$node\",job=\"$job\"}) / (node_memory_SwapTotal_bytes{instance=\"$node\",job=\"$job\"})) * 100&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Root FS Used query",
                    "options": {
                        "description": "Root FS Used query",
                        "order": 9,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "100 - ((node_filesystem_avail_bytes{instance=\"$node\",job=\"$job\",mountpoint=\"/\",fstype!=\"rootfs\"} * 100) / node_filesystem_size_bytes{instance=\"$node\",job=\"$job\",mountpoint=\"/\",fstype!=\"rootfs\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Cores query",
                    "options": {
                        "description": "CPU Cores query",
                        "order": 10,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Uptime query",
                    "options": {
                        "description": "Uptime query",
                        "order": 11,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_time_seconds{instance=\"$node\",job=\"$job\"} - node_boot_time_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "RootFS Total query",
                    "options": {
                        "description": "RootFS Total query",
                        "order": 12,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_size_bytes{instance=\"$node\",job=\"$job\",mountpoint=\"/\",fstype!=\"rootfs\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "RAM Total query",
                    "options": {
                        "description": "RAM Total query",
                        "order": 13,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemTotal_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "SWAP Total query",
                    "options": {
                        "description": "SWAP Total query",
                        "order": 14,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_SwapTotal_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Busy System query",
                    "options": {
                        "description": "CPU Basic - Busy System query",
                        "order": 15,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"system\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Busy User query",
                    "options": {
                        "description": "CPU Basic - Busy User query",
                        "order": 16,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"user\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Busy Iowait query",
                    "options": {
                        "description": "CPU Basic - Busy Iowait query",
                        "order": 17,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"iowait\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Busy IRQs query",
                    "options": {
                        "description": "CPU Basic - Busy IRQs query",
                        "order": 18,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=~\".*irq\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Busy Other query",
                    "options": {
                        "description": "CPU Basic - Busy Other query",
                        "order": 19,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\",  mode!='idle',mode!='user',mode!='system',mode!='iowait',mode!='irq',mode!='softirq'}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Basic - Idle query",
                    "options": {
                        "description": "CPU Basic - Idle query",
                        "order": 20,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"idle\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Basic - RAM Total query",
                    "options": {
                        "description": "Memory Basic - RAM Total query",
                        "order": 21,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemTotal_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Basic - RAM Used query",
                    "options": {
                        "description": "Memory Basic - RAM Used query",
                        "order": 22,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemTotal_bytes{instance=\"$node\",job=\"$job\"} - node_memory_MemFree_bytes{instance=\"$node\",job=\"$job\"} - (node_memory_Cached_bytes{instance=\"$node\",job=\"$job\"} + node_memory_Buffers_bytes{instance=\"$node\",job=\"$job\"} + node_memory_SReclaimable_bytes{instance=\"$node\",job=\"$job\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Basic - RAM Cache + Buffer query",
                    "options": {
                        "description": "Memory Basic - RAM Cache + Buffer query",
                        "order": 23,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Cached_bytes{instance=\"$node\",job=\"$job\"} + node_memory_Buffers_bytes{instance=\"$node\",job=\"$job\"} + node_memory_SReclaimable_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Basic - RAM Free query",
                    "options": {
                        "description": "Memory Basic - RAM Free query",
                        "order": 24,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemFree_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Basic - SWAP Used query",
                    "options": {
                        "description": "Memory Basic - SWAP Used query",
                        "order": 25,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "(node_memory_SwapTotal_bytes{instance=\"$node\",job=\"$job\"} - node_memory_SwapFree_bytes{instance=\"$node\",job=\"$job\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Basic - recv {{device}} query",
                    "options": {
                        "description": "Network Traffic Basic - recv {{device}} query",
                        "order": 26,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])*8&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Basic - trans {{device}}  query",
                    "options": {
                        "description": "Network Traffic Basic - trans {{device}}  query",
                        "order": 27,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])*8&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk Space Used Basic query",
                    "options": {
                        "description": "Disk Space Used Basic query",
                        "order": 28,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "100 - ((node_filesystem_avail_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'} * 100) / node_filesystem_size_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Processes executing in kernel mode query",
                    "options": {
                        "description": "CPU - Processes executing in kernel mode query",
                        "order": 29,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"system\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Normal processes executing in user mode query",
                    "options": {
                        "description": "CPU - Normal processes executing in user mode query",
                        "order": 30,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"user\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Niced processes executing in user mode query",
                    "options": {
                        "description": "CPU - Niced processes executing in user mode query",
                        "order": 31,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"nice\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Waiting for I/O to complete query",
                    "options": {
                        "description": "CPU - Waiting for I/O to complete query",
                        "order": 32,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum by(instance) (irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"iowait\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Servicing interrupts query",
                    "options": {
                        "description": "CPU - Servicing interrupts query",
                        "order": 33,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"irq\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Servicing softirqs query",
                    "options": {
                        "description": "CPU - Servicing softirqs query",
                        "order": 34,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"softirq\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Time spent in other operating systems when running in a virtualized environment query",
                    "options": {
                        "description": "CPU - Time spent in other operating systems when running in a virtualized environment query",
                        "order": 35,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"steal\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU - Waiting for something to happen query",
                    "options": {
                        "description": "CPU - Waiting for something to happen query",
                        "order": 36,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum(irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\", mode=\"idle\"}[$__rate_interval])) / scalar(count(count(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}) by (cpu)))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Memory used by user-space applications query",
                    "options": {
                        "description": "Memory Stack - Memory used by user-space applications query",
                        "order": 37,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemTotal_bytes{instance=\"$node\",job=\"$job\"} - node_memory_MemFree_bytes{instance=\"$node\",job=\"$job\"} - node_memory_Buffers_bytes{instance=\"$node\",job=\"$job\"} - node_memory_Cached_bytes{instance=\"$node\",job=\"$job\"} - node_memory_Slab_bytes{instance=\"$node\",job=\"$job\"} - node_memory_PageTables_bytes{instance=\"$node\",job=\"$job\"} - node_memory_SwapCached_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Memory used to map between virtual and physical memory addresses query",
                    "options": {
                        "description": "Memory Stack - Memory used to map between virtual and physical memory addresses query",
                        "order": 38,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_PageTables_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Memory that keeps track of pages that have been fetched from swap but not yet been modified query",
                    "options": {
                        "description": "Memory Stack - Memory that keeps track of pages that have been fetched from swap but not yet been modified query",
                        "order": 39,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_SwapCached_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Memory used by the kernel to cache data structures for its own use (caches like inode, dentry, etc) query",
                    "options": {
                        "description": "Memory Stack - Memory used by the kernel to cache data structures for its own use (caches like inode, dentry, etc) query",
                        "order": 40,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Slab_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Parked file data (file content) cache query",
                    "options": {
                        "description": "Memory Stack - Parked file data (file content) cache query",
                        "order": 41,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Cached_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Block device (e.g. harddisk) cache query",
                    "options": {
                        "description": "Memory Stack - Block device (e.g. harddisk) cache query",
                        "order": 42,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Buffers_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Free memory unassigned query",
                    "options": {
                        "description": "Memory Stack - Free memory unassigned query",
                        "order": 43,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_MemFree_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Swap space used query",
                    "options": {
                        "description": "Memory Stack - Swap space used query",
                        "order": 44,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "(node_memory_SwapTotal_bytes{instance=\"$node\",job=\"$job\"} - node_memory_SwapFree_bytes{instance=\"$node\",job=\"$job\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Stack - Amount of RAM that the kernel identified as corrupted / not working query",
                    "options": {
                        "description": "Memory Stack - Amount of RAM that the kernel identified as corrupted / not working query",
                        "order": 45,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_HardwareCorrupted_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic - Receive query",
                    "options": {
                        "description": "Network Traffic - Receive query",
                        "order": 46,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])*8&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic - Transmit query",
                    "options": {
                        "description": "Network Traffic - Transmit query",
                        "order": 47,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])*8&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk Space Used query",
                    "options": {
                        "description": "Disk Space Used query",
                        "order": 48,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_size_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'} - node_filesystem_avail_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps - Reads completed query",
                    "options": {
                        "description": "Disk IOps - Reads completed query",
                        "order": 49,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_reads_completed_total{instance=\"$node\",job=\"$job\",device=~\"$diskdevices\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps - Writes completed query",
                    "options": {
                        "description": "Disk IOps - Writes completed query",
                        "order": 50,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_writes_completed_total{instance=\"$node\",job=\"$job\",device=~\"$diskdevices\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "I/O Usage Read / Write - Successfully read bytes query",
                    "options": {
                        "description": "I/O Usage Read / Write - Successfully read bytes query",
                        "order": 51,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_read_bytes_total{instance=\"$node\",job=\"$job\",device=~\"$diskdevices\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "I/O Usage Read / Write - Successfully written bytes query",
                    "options": {
                        "description": "I/O Usage Read / Write - Successfully written bytes query",
                        "order": 52,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_written_bytes_total{instance=\"$node\",job=\"$job\",device=~\"$diskdevices\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "I/O Utilization query",
                    "options": {
                        "description": "I/O Utilization query",
                        "order": 53,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_io_time_seconds_total{instance=\"$node\",job=\"$job\",device=~\"$diskdevices\"} [$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU spent seconds in guests (VMs) - Time spent running a virtual CPU for a guest operating system query",
                    "options": {
                        "description": "CPU spent seconds in guests (VMs) - Time spent running a virtual CPU for a guest operating system query",
                        "order": 54,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum by(instance) (irate(node_cpu_guest_seconds_total{instance=\"$node\",job=\"$job\", mode=\"user\"}[1m])) / on(instance) group_left sum by (instance)((irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}[1m])))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU spent seconds in guests (VMs) - Time spent running a niced guest  (virtual CPU for guest operating system) query",
                    "options": {
                        "description": "CPU spent seconds in guests (VMs) - Time spent running a niced guest  (virtual CPU for guest operating system) query",
                        "order": 55,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "sum by(instance) (irate(node_cpu_guest_seconds_total{instance=\"$node\",job=\"$job\", mode=\"nice\"}[1m])) / on(instance) group_left sum by (instance)((irate(node_cpu_seconds_total{instance=\"$node\",job=\"$job\"}[1m])))&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive - Memory which has been less recently used.  It is more eligible to be reclaimed for other purposes query",
                    "options": {
                        "description": "Memory Active / Inactive - Memory which has been less recently used.  It is more eligible to be reclaimed for other purposes query",
                        "order": 56,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Inactive_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive - Memory that has been used more recently and usually not reclaimed unless absolutely necessary query",
                    "options": {
                        "description": "Memory Active / Inactive - Memory that has been used more recently and usually not reclaimed unless absolutely necessary query",
                        "order": 57,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Active_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Committed - Amount of memory presently allocated on the system query",
                    "options": {
                        "description": "Memory Committed - Amount of memory presently allocated on the system query",
                        "order": 58,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Committed_AS_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Committed - Amount of  memory currently available to be allocated on the system query",
                    "options": {
                        "description": "Memory Committed - Amount of  memory currently available to be allocated on the system query",
                        "order": 59,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_CommitLimit_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive Detail - File-backed memory on inactive LRU list query",
                    "options": {
                        "description": "Memory Active / Inactive Detail - File-backed memory on inactive LRU list query",
                        "order": 60,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Inactive_file_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive Detail - Anonymous and swap cache on inactive LRU list, including tmpfs (shmem) query",
                    "options": {
                        "description": "Memory Active / Inactive Detail - Anonymous and swap cache on inactive LRU list, including tmpfs (shmem) query",
                        "order": 61,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Inactive_anon_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive Detail - File-backed memory on active LRU list query",
                    "options": {
                        "description": "Memory Active / Inactive Detail - File-backed memory on active LRU list query",
                        "order": 62,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Active_file_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Active / Inactive Detail - Anonymous and swap cache on active least-recently-used (LRU) list, including tmpfs query",
                    "options": {
                        "description": "Memory Active / Inactive Detail - Anonymous and swap cache on active least-recently-used (LRU) list, including tmpfs query",
                        "order": 63,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Active_anon_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Writeback and Dirty - Memory which is actively being written back to disk query",
                    "options": {
                        "description": "Memory Writeback and Dirty - Memory which is actively being written back to disk query",
                        "order": 64,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Writeback_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Writeback and Dirty - Memory used by FUSE for temporary writeback buffers query",
                    "options": {
                        "description": "Memory Writeback and Dirty - Memory used by FUSE for temporary writeback buffers query",
                        "order": 65,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_WritebackTmp_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Writeback and Dirty - Memory which is waiting to get written back to the disk query",
                    "options": {
                        "description": "Memory Writeback and Dirty - Memory which is waiting to get written back to the disk query",
                        "order": 66,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Dirty_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Shared and Mapped - Used memory in mapped pages files which have been mapped, such as libraries query",
                    "options": {
                        "description": "Memory Shared and Mapped - Used memory in mapped pages files which have been mapped, such as libraries query",
                        "order": 67,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Mapped_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Shared and Mapped - Used shared memory (shared between several processes, thus including RAM disks) query",
                    "options": {
                        "description": "Memory Shared and Mapped - Used shared memory (shared between several processes, thus including RAM disks) query",
                        "order": 68,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Shmem_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Shared and Mapped - Memory used by shared memory (shmem) and tmpfs allocated  with huge pages query",
                    "options": {
                        "description": "Memory Shared and Mapped - Memory used by shared memory (shmem) and tmpfs allocated  with huge pages query",
                        "order": 69,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_ShmemHugePages_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Shared and Mapped - Amount of shared (shmem/tmpfs) memory backed by huge pages query",
                    "options": {
                        "description": "Memory Shared and Mapped - Amount of shared (shmem/tmpfs) memory backed by huge pages query",
                        "order": 70,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_ShmemPmdMapped_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Slab - Part of Slab, that cannot be reclaimed on memory pressure query",
                    "options": {
                        "description": "Memory Slab - Part of Slab, that cannot be reclaimed on memory pressure query",
                        "order": 71,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_SUnreclaim_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Slab - Part of Slab, that might be reclaimed, such as caches query",
                    "options": {
                        "description": "Memory Slab - Part of Slab, that might be reclaimed, such as caches query",
                        "order": 72,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_SReclaimable_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Vmalloc - Largest contiguous block of vmalloc area which is free query",
                    "options": {
                        "description": "Memory Vmalloc - Largest contiguous block of vmalloc area which is free query",
                        "order": 73,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_VmallocChunk_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Vmalloc - Total size of vmalloc memory area query",
                    "options": {
                        "description": "Memory Vmalloc - Total size of vmalloc memory area query",
                        "order": 74,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_VmallocTotal_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Vmalloc - Amount of vmalloc area which is used query",
                    "options": {
                        "description": "Memory Vmalloc - Amount of vmalloc area which is used query",
                        "order": 75,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_VmallocUsed_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Bounce query",
                    "options": {
                        "description": "Memory Bounce query",
                        "order": 76,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Bounce_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Anonymous - Memory in anonymous huge pages query",
                    "options": {
                        "description": "Memory Anonymous - Memory in anonymous huge pages query",
                        "order": 77,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_AnonHugePages_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Anonymous - Memory in user pages not backed by files query",
                    "options": {
                        "description": "Memory Anonymous - Memory in user pages not backed by files query",
                        "order": 78,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_AnonPages_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Kernel / CPU - Kernel memory stack. This is not reclaimable query",
                    "options": {
                        "description": "Memory Kernel / CPU - Kernel memory stack. This is not reclaimable query",
                        "order": 79,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_KernelStack_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Kernel / CPU - Per CPU memory allocated dynamically by loadable modules query",
                    "options": {
                        "description": "Memory Kernel / CPU - Per CPU memory allocated dynamically by loadable modules query",
                        "order": 80,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Percpu_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory HugePages Counter - Huge pages in the pool that are not yet allocated query",
                    "options": {
                        "description": "Memory HugePages Counter - Huge pages in the pool that are not yet allocated query",
                        "order": 81,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_HugePages_Free{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory HugePages Counter - Huge pages for which a commitment to allocate from the pool has been made, but no allocation has yet been made query",
                    "options": {
                        "description": "Memory HugePages Counter - Huge pages for which a commitment to allocate from the pool has been made, but no allocation has yet been made query",
                        "order": 82,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_HugePages_Rsvd{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory HugePages Counter - Huge pages in the pool above the value in /proc/sys/vm/nr_hugepages query",
                    "options": {
                        "description": "Memory HugePages Counter - Huge pages in the pool above the value in /proc/sys/vm/nr_hugepages query",
                        "order": 83,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_HugePages_Surp{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory HugePages Size - Total size of the pool of huge pages query",
                    "options": {
                        "description": "Memory HugePages Size - Total size of the pool of huge pages query",
                        "order": 84,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_HugePages_Total{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory HugePages Size - Huge Page size query",
                    "options": {
                        "description": "Memory HugePages Size - Huge Page size query",
                        "order": 85,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Hugepagesize_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory DirectMap - Amount of pages mapped as this size query",
                    "options": {
                        "description": "Memory DirectMap - Amount of pages mapped as this size query",
                        "order": 86,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_DirectMap1G_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory DirectMap - Amount of pages mapped as this size query",
                    "options": {
                        "description": "Memory DirectMap - Amount of pages mapped as this size query",
                        "order": 87,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_DirectMap2M_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory DirectMap - Amount of pages mapped as this size query",
                    "options": {
                        "description": "Memory DirectMap - Amount of pages mapped as this size query",
                        "order": 88,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_DirectMap4k_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Unevictable and MLocked - Amount of unevictable memory that can't be swapped out for a variety of reasons query",
                    "options": {
                        "description": "Memory Unevictable and MLocked - Amount of unevictable memory that can't be swapped out for a variety of reasons query",
                        "order": 89,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Unevictable_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Unevictable and MLocked - Size of pages locked to memory using the mlock() system call query",
                    "options": {
                        "description": "Memory Unevictable and MLocked - Size of pages locked to memory using the mlock() system call query",
                        "order": 90,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_Mlocked_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory NFS query",
                    "options": {
                        "description": "Memory NFS query",
                        "order": 91,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_memory_NFS_Unstable_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Pages In / Out - Page in operations query",
                    "options": {
                        "description": "Memory Pages In / Out - Page in operations query",
                        "order": 92,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pgpgin{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Pages In / Out - Page out operations query",
                    "options": {
                        "description": "Memory Pages In / Out - Page out operations query",
                        "order": 93,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pgpgout{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Pages Swap In / Out - Pages swapped in query",
                    "options": {
                        "description": "Memory Pages Swap In / Out - Pages swapped in query",
                        "order": 94,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pswpin{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Pages Swap In / Out - Pages swapped out query",
                    "options": {
                        "description": "Memory Pages Swap In / Out - Pages swapped out query",
                        "order": 95,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pswpout{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Page Faults - Page major and minor fault operations query",
                    "options": {
                        "description": "Memory Page Faults - Page major and minor fault operations query",
                        "order": 96,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pgfault{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Page Faults - Major page fault operations query",
                    "options": {
                        "description": "Memory Page Faults - Major page fault operations query",
                        "order": 97,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pgmajfault{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Memory Page Faults - Minor page fault operations query",
                    "options": {
                        "description": "Memory Page Faults - Minor page fault operations query",
                        "order": 98,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_pgfault{instance=\"$node\",job=\"$job\"}[$__rate_interval])  - irate(node_vmstat_pgmajfault{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "OOM Killer query",
                    "options": {
                        "description": "OOM Killer query",
                        "order": 99,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_vmstat_oom_kill{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Synchronized Drift - Estimated error in seconds query",
                    "options": {
                        "description": "Time Synchronized Drift - Estimated error in seconds query",
                        "order": 100,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_estimated_error_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Synchronized Drift - Time offset in between local system and reference clock query",
                    "options": {
                        "description": "Time Synchronized Drift - Time offset in between local system and reference clock query",
                        "order": 101,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_offset_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Synchronized Drift - Maximum error in seconds query",
                    "options": {
                        "description": "Time Synchronized Drift - Maximum error in seconds query",
                        "order": 102,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_maxerror_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time PLL Adjust query",
                    "options": {
                        "description": "Time PLL Adjust query",
                        "order": 103,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_loop_time_constant{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Synchronized Status - Is clock synchronized to a reliable server (1 = yes, 0 = no) query",
                    "options": {
                        "description": "Time Synchronized Status - Is clock synchronized to a reliable server (1 = yes, 0 = no) query",
                        "order": 104,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_sync_status{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Synchronized Status - Local clock frequency adjustment query",
                    "options": {
                        "description": "Time Synchronized Status - Local clock frequency adjustment query",
                        "order": 105,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_frequency_adjustment_ratio{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Misc - Seconds between clock ticks query",
                    "options": {
                        "description": "Time Misc - Seconds between clock ticks query",
                        "order": 106,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_tick_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Misc - International Atomic Time (TAI) offset query",
                    "options": {
                        "description": "Time Misc - International Atomic Time (TAI) offset query",
                        "order": 107,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_timex_tai_offset_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Status - Processes blocked waiting for I/O to complete query",
                    "options": {
                        "description": "Processes Status - Processes blocked waiting for I/O to complete query",
                        "order": 108,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_procs_blocked{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Status - Processes in runnable state query",
                    "options": {
                        "description": "Processes Status - Processes in runnable state query",
                        "order": 109,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_procs_running{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes State query",
                    "options": {
                        "description": "Processes State query",
                        "order": 110,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_processes_state{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes  Forks query",
                    "options": {
                        "description": "Processes  Forks query",
                        "order": 111,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_forks_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Memory - Processes virtual memory size in bytes query",
                    "options": {
                        "description": "Processes Memory - Processes virtual memory size in bytes query",
                        "order": 112,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(process_virtual_memory_bytes{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Memory - Maximum amount of virtual memory available in bytes query",
                    "options": {
                        "description": "Processes Memory - Maximum amount of virtual memory available in bytes query",
                        "order": 113,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "process_resident_memory_max_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Memory - Processes virtual memory size in bytes query",
                    "options": {
                        "description": "Processes Memory - Processes virtual memory size in bytes query",
                        "order": 114,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(process_virtual_memory_bytes{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Processes Memory - Maximum amount of virtual memory available in bytes query",
                    "options": {
                        "description": "Processes Memory - Maximum amount of virtual memory available in bytes query",
                        "order": 115,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(process_virtual_memory_max_bytes{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "PIDs Number and Limit - Number of PIDs query",
                    "options": {
                        "description": "PIDs Number and Limit - Number of PIDs query",
                        "order": 116,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_processes_pids{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "PIDs Number and Limit - PIDs limit query",
                    "options": {
                        "description": "PIDs Number and Limit - PIDs limit query",
                        "order": 117,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_processes_max_processes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Process schedule stats Running / Waiting - seconds spent running a process query",
                    "options": {
                        "description": "Process schedule stats Running / Waiting - seconds spent running a process query",
                        "order": 118,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_schedstat_running_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Process schedule stats Running / Waiting - seconds spent by processing waiting for this CPU query",
                    "options": {
                        "description": "Process schedule stats Running / Waiting - seconds spent by processing waiting for this CPU query",
                        "order": 119,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_schedstat_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Threads Number and Limit - Allocated threads query",
                    "options": {
                        "description": "Threads Number and Limit - Allocated threads query",
                        "order": 120,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_processes_threads{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Threads Number and Limit - Threads limit query",
                    "options": {
                        "description": "Threads Number and Limit - Threads limit query",
                        "order": 121,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_processes_max_threads{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Context Switches / Interrupts - Context switches query",
                    "options": {
                        "description": "Context Switches / Interrupts - Context switches query",
                        "order": 122,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_context_switches_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Context Switches / Interrupts - Interrupts query",
                    "options": {
                        "description": "Context Switches / Interrupts - Interrupts query",
                        "order": 123,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_intr_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "System Load - Load 1m query",
                    "options": {
                        "description": "System Load - Load 1m query",
                        "order": 124,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_load1{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "System Load - Load 5m query",
                    "options": {
                        "description": "System Load - Load 5m query",
                        "order": 125,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_load5{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "System Load - Load 15m query",
                    "options": {
                        "description": "System Load - Load 15m query",
                        "order": 126,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_load15{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Frequency Scaling - CPU {{ cpu }} query",
                    "options": {
                        "description": "CPU Frequency Scaling - CPU {{ cpu }} query",
                        "order": 127,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_cpu_scaling_frequency_hertz{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Frequency Scaling - Max query",
                    "options": {
                        "description": "CPU Frequency Scaling - Max query",
                        "order": 128,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "avg(node_cpu_scaling_frequency_max_hertz{instance=\"$node\",job=\"$job\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU Frequency Scaling - Min query",
                    "options": {
                        "description": "CPU Frequency Scaling - Min query",
                        "order": 129,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "avg(node_cpu_scaling_frequency_min_hertz{instance=\"$node\",job=\"$job\"})&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure Stall Information - CPU some query",
                    "options": {
                        "description": "Pressure Stall Information - CPU some query",
                        "order": 130,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "rate(node_pressure_cpu_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure Stall Information - Memory some query",
                    "options": {
                        "description": "Pressure Stall Information - Memory some query",
                        "order": 131,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "rate(node_pressure_memory_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure Stall Information - Memory full query",
                    "options": {
                        "description": "Pressure Stall Information - Memory full query",
                        "order": 132,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "rate(node_pressure_memory_stalled_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure Stall Information - I/O some query",
                    "options": {
                        "description": "Pressure Stall Information - I/O some query",
                        "order": 133,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "rate(node_pressure_io_waiting_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Pressure Stall Information - I/O full query",
                    "options": {
                        "description": "Pressure Stall Information - I/O full query",
                        "order": 134,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "rate(node_pressure_io_stalled_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Interrupts Detail query",
                    "options": {
                        "description": "Interrupts Detail query",
                        "order": 135,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_interrupts_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Schedule timeslices executed by each cpu query",
                    "options": {
                        "description": "Schedule timeslices executed by each cpu query",
                        "order": 136,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_schedstat_timeslices_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Entropy query",
                    "options": {
                        "description": "Entropy query",
                        "order": 137,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_entropy_available_bits{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "CPU time spent in user and system contexts query",
                    "options": {
                        "description": "CPU time spent in user and system contexts query",
                        "order": 138,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(process_cpu_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Descriptors - Maximum open file descriptors query",
                    "options": {
                        "description": "File Descriptors - Maximum open file descriptors query",
                        "order": 139,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "process_max_fds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Descriptors - Open file descriptors query",
                    "options": {
                        "description": "File Descriptors - Open file descriptors query",
                        "order": 140,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "process_open_fds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} temp query",
                    "options": {
                        "description": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} temp query",
                        "order": 141,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_hwmon_temp_celsius{instance=\"$node\",job=\"$job\"} * on(chip) group_left(chip_name) node_hwmon_chip_names{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical Alarm query",
                    "options": {
                        "description": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical Alarm query",
                        "order": 142,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_hwmon_temp_crit_alarm_celsius{instance=\"$node\",job=\"$job\"} * on(chip) group_left(chip_name) node_hwmon_chip_names{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical query",
                    "options": {
                        "description": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical query",
                        "order": 143,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_hwmon_temp_crit_celsius{instance=\"$node\",job=\"$job\"} * on(chip) group_left(chip_name) node_hwmon_chip_names{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical Historical query",
                    "options": {
                        "description": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Critical Historical query",
                        "order": 144,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_hwmon_temp_crit_hyst_celsius{instance=\"$node\",job=\"$job\"} * on(chip) group_left(chip_name) node_hwmon_chip_names{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Max query",
                    "options": {
                        "description": "Hardware temperature monitor - {{ chip_name }} {{ sensor }} Max query",
                        "order": 145,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_hwmon_temp_max_celsius{instance=\"$node\",job=\"$job\"} * on(chip) group_left(chip_name) node_hwmon_chip_names{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Throttle cooling device - Current {{ name }} in {{ type }} query",
                    "options": {
                        "description": "Throttle cooling device - Current {{ name }} in {{ type }} query",
                        "order": 146,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_cooling_device_cur_state{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Throttle cooling device - Max {{ name }} in {{ type }} query",
                    "options": {
                        "description": "Throttle cooling device - Max {{ name }} in {{ type }} query",
                        "order": 147,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_cooling_device_max_state{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Power supply query",
                    "options": {
                        "description": "Power supply query",
                        "order": 148,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_power_supply_online{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Sockets query",
                    "options": {
                        "description": "Systemd Sockets query",
                        "order": 149,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_systemd_socket_accepted_connections_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Units State - Activating query",
                    "options": {
                        "description": "Systemd Units State - Activating query",
                        "order": 150,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_systemd_units{instance=\"$node\",job=\"$job\",state=\"activating\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Units State - Active query",
                    "options": {
                        "description": "Systemd Units State - Active query",
                        "order": 151,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_systemd_units{instance=\"$node\",job=\"$job\",state=\"active\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Units State - Deactivating query",
                    "options": {
                        "description": "Systemd Units State - Deactivating query",
                        "order": 152,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_systemd_units{instance=\"$node\",job=\"$job\",state=\"deactivating\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Units State - Failed query",
                    "options": {
                        "description": "Systemd Units State - Failed query",
                        "order": 153,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_systemd_units{instance=\"$node\",job=\"$job\",state=\"failed\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Systemd Units State - Inactive query",
                    "options": {
                        "description": "Systemd Units State - Inactive query",
                        "order": 154,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_systemd_units{instance=\"$node\",job=\"$job\",state=\"inactive\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps Completed - Reads completed query",
                    "options": {
                        "description": "Disk IOps Completed - Reads completed query",
                        "order": 155,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_reads_completed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps Completed - Writes completed query",
                    "options": {
                        "description": "Disk IOps Completed - Writes completed query",
                        "order": 156,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_writes_completed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk R/W Data - Read bytes query",
                    "options": {
                        "description": "Disk R/W Data - Read bytes query",
                        "order": 157,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_read_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk R/W Data - Written bytes query",
                    "options": {
                        "description": "Disk R/W Data - Written bytes query",
                        "order": 158,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_written_bytes_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk Average Wait Time - Read wait time avg query",
                    "options": {
                        "description": "Disk Average Wait Time - Read wait time avg query",
                        "order": 159,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_read_time_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval]) / irate(node_disk_reads_completed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk Average Wait Time - Write wait time avg query",
                    "options": {
                        "description": "Disk Average Wait Time - Write wait time avg query",
                        "order": 160,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_write_time_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval]) / irate(node_disk_writes_completed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Average Queue Size query",
                    "options": {
                        "description": "Average Queue Size query",
                        "order": 161,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_io_time_weighted_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk R/W Merged - Read merged query",
                    "options": {
                        "description": "Disk R/W Merged - Read merged query",
                        "order": 162,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_reads_merged_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk R/W Merged - Write merged query",
                    "options": {
                        "description": "Disk R/W Merged - Write merged query",
                        "order": 163,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_writes_merged_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Spent Doing I/Os - IO query",
                    "options": {
                        "description": "Time Spent Doing I/Os - IO query",
                        "order": 164,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_io_time_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Time Spent Doing I/Os - discard query",
                    "options": {
                        "description": "Time Spent Doing I/Os - discard query",
                        "order": 165,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_discard_time_seconds_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Instantaneous Queue Size query",
                    "options": {
                        "description": "Instantaneous Queue Size query",
                        "order": 166,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_disk_io_now{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps Discards completed / merged - Discards completed query",
                    "options": {
                        "description": "Disk IOps Discards completed / merged - Discards completed query",
                        "order": 167,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_discards_completed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Disk IOps Discards completed / merged - Discards merged query",
                    "options": {
                        "description": "Disk IOps Discards completed / merged - Discards merged query",
                        "order": 168,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_disk_discards_merged_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Filesystem space available - Available query",
                    "options": {
                        "description": "Filesystem space available - Available query",
                        "order": 169,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_avail_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Filesystem space available - Free query",
                    "options": {
                        "description": "Filesystem space available - Free query",
                        "order": 170,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_free_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Filesystem space available - Size query",
                    "options": {
                        "description": "Filesystem space available - Size query",
                        "order": 171,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_size_bytes{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Nodes Free query",
                    "options": {
                        "description": "File Nodes Free query",
                        "order": 172,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_files_free{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Descriptor - Max open files query",
                    "options": {
                        "description": "File Descriptor - Max open files query",
                        "order": 173,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filefd_maximum{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Descriptor - Open files query",
                    "options": {
                        "description": "File Descriptor - Open files query",
                        "order": 174,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filefd_allocated{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "File Nodes Size query",
                    "options": {
                        "description": "File Nodes Size query",
                        "order": 175,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_files{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Filesystem in ReadOnly / Error - ReadOnly query",
                    "options": {
                        "description": "Filesystem in ReadOnly / Error - ReadOnly query",
                        "order": 176,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_readonly{instance=\"$node\",job=\"$job\",device!~'rootfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Filesystem in ReadOnly / Error - Device error query",
                    "options": {
                        "description": "Filesystem in ReadOnly / Error - Device error query",
                        "order": 177,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_filesystem_device_error{instance=\"$node\",job=\"$job\",device!~'rootfs',fstype!~'tmpfs'}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic by Packets - Receive query",
                    "options": {
                        "description": "Network Traffic by Packets - Receive query",
                        "order": 178,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_packets_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic by Packets - Transmit query",
                    "options": {
                        "description": "Network Traffic by Packets - Transmit query",
                        "order": 179,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_packets_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Errors - Receive errors query",
                    "options": {
                        "description": "Network Traffic Errors - Receive errors query",
                        "order": 180,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_errs_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Errors - Transmit errors query",
                    "options": {
                        "description": "Network Traffic Errors - Transmit errors query",
                        "order": 181,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_errs_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Drop - Receive drop query",
                    "options": {
                        "description": "Network Traffic Drop - Receive drop query",
                        "order": 182,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_drop_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Drop - Transmit drop query",
                    "options": {
                        "description": "Network Traffic Drop - Transmit drop query",
                        "order": 183,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_drop_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Compressed - Receive compressed query",
                    "options": {
                        "description": "Network Traffic Compressed - Receive compressed query",
                        "order": 184,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_compressed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Compressed - Transmit compressed query",
                    "options": {
                        "description": "Network Traffic Compressed - Transmit compressed query",
                        "order": 185,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_compressed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Multicast query",
                    "options": {
                        "description": "Network Traffic Multicast query",
                        "order": 186,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_multicast_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Fifo - Receive fifo query",
                    "options": {
                        "description": "Network Traffic Fifo - Receive fifo query",
                        "order": 187,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_fifo_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Fifo - Transmit fifo query",
                    "options": {
                        "description": "Network Traffic Fifo - Transmit fifo query",
                        "order": 188,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_fifo_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Frame query",
                    "options": {
                        "description": "Network Traffic Frame query",
                        "order": 189,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_receive_frame_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Carrier query",
                    "options": {
                        "description": "Network Traffic Carrier query",
                        "order": 190,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_carrier_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Traffic Colls query",
                    "options": {
                        "description": "Network Traffic Colls query",
                        "order": 191,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_network_transmit_colls_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "NF Conntrack - NF conntrack entries query",
                    "options": {
                        "description": "NF Conntrack - NF conntrack entries query",
                        "order": 192,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_nf_conntrack_entries{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "NF Conntrack - NF conntrack limit query",
                    "options": {
                        "description": "NF Conntrack - NF conntrack limit query",
                        "order": 193,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_nf_conntrack_entries_limit{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "ARP Entries query",
                    "options": {
                        "description": "ARP Entries query",
                        "order": 194,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_arp_entries{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "MTU query",
                    "options": {
                        "description": "MTU query",
                        "order": 195,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_network_mtu_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Speed query",
                    "options": {
                        "description": "Speed query",
                        "order": 196,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_network_speed_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Queue Length query",
                    "options": {
                        "description": "Queue Length query",
                        "order": 197,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_network_transmit_queue_length{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Softnet Packets - Processed query",
                    "options": {
                        "description": "Softnet Packets - Processed query",
                        "order": 198,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_softnet_processed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Softnet Packets - Dropped query",
                    "options": {
                        "description": "Softnet Packets - Dropped query",
                        "order": 199,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_softnet_dropped_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Softnet Out of Quota query",
                    "options": {
                        "description": "Softnet Out of Quota query",
                        "order": 200,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_softnet_times_squeezed_total{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Operational Status - Operational state UP query",
                    "options": {
                        "description": "Network Operational Status - Operational state UP query",
                        "order": 201,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_network_up{operstate=\"up\",instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Network Operational Status - Physical link state query",
                    "options": {
                        "description": "Network Operational Status - Physical link state query",
                        "order": 202,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_network_carrier{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat TCP - Allocated sockets query",
                    "options": {
                        "description": "Sockstat TCP - Allocated sockets query",
                        "order": 203,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_alloc{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat TCP - Tcp sockets currently in use query",
                    "options": {
                        "description": "Sockstat TCP - Tcp sockets currently in use query",
                        "order": 204,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_inuse{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat TCP - Used memory for tcp query",
                    "options": {
                        "description": "Sockstat TCP - Used memory for tcp query",
                        "order": 205,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_mem{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat TCP - Orphan sockets query",
                    "options": {
                        "description": "Sockstat TCP - Orphan sockets query",
                        "order": 206,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_orphan{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat TCP - Sockets waiting close query",
                    "options": {
                        "description": "Sockstat TCP - Sockets waiting close query",
                        "order": 207,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_tw{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat UDP - Udplite sockets currently in use query",
                    "options": {
                        "description": "Sockstat UDP - Udplite sockets currently in use query",
                        "order": 208,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_UDPLITE_inuse{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat UDP - Udp sockets currently in use query",
                    "options": {
                        "description": "Sockstat UDP - Udp sockets currently in use query",
                        "order": 209,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_UDP_inuse{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat UDP - Used memory for udp query",
                    "options": {
                        "description": "Sockstat UDP - Used memory for udp query",
                        "order": 210,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_UDP_mem{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat FRAG / RAW - Frag sockets currently in use query",
                    "options": {
                        "description": "Sockstat FRAG / RAW - Frag sockets currently in use query",
                        "order": 211,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_FRAG_inuse{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat FRAG / RAW - Raw sockets currently in use query",
                    "options": {
                        "description": "Sockstat FRAG / RAW - Raw sockets currently in use query",
                        "order": 212,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_RAW_inuse{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat Memory Size - TCP sockets in that state query",
                    "options": {
                        "description": "Sockstat Memory Size - TCP sockets in that state query",
                        "order": 213,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_TCP_mem_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat Memory Size - UDP sockets in that state query",
                    "options": {
                        "description": "Sockstat Memory Size - UDP sockets in that state query",
                        "order": 214,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_UDP_mem_bytes{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat Memory Size - Used memory for frag query",
                    "options": {
                        "description": "Sockstat Memory Size - Used memory for frag query",
                        "order": 215,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_FRAG_memory{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Sockstat Used query",
                    "options": {
                        "description": "Sockstat Used query",
                        "order": 216,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_sockstat_sockets_used{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Netstat IP In / Out Octets - Received octets query",
                    "options": {
                        "description": "Netstat IP In / Out Octets - Received octets query",
                        "order": 217,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_IpExt_InOctets{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Netstat IP In / Out Octets - Sent octets query",
                    "options": {
                        "description": "Netstat IP In / Out Octets - Sent octets query",
                        "order": 218,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_IpExt_OutOctets{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Netstat IP Forwarding query",
                    "options": {
                        "description": "Netstat IP Forwarding query",
                        "order": 219,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Ip_Forwarding{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "ICMP In / Out -  Messages which the entity received. Note that this counter includes all those counted by icmpInErrors query",
                    "options": {
                        "description": "ICMP In / Out -  Messages which the entity received. Note that this counter includes all those counted by icmpInErrors query",
                        "order": 220,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Icmp_InMsgs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "ICMP In / Out - Messages which this entity attempted to send. Note that this counter includes all those counted by icmpOutErrors query",
                    "options": {
                        "description": "ICMP In / Out - Messages which this entity attempted to send. Note that this counter includes all those counted by icmpOutErrors query",
                        "order": 221,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Icmp_OutMsgs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "ICMP Errors query",
                    "options": {
                        "description": "ICMP Errors query",
                        "order": 222,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Icmp_InErrors{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP In / Out - Datagrams received query",
                    "options": {
                        "description": "UDP In / Out - Datagrams received query",
                        "order": 223,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_InDatagrams{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP In / Out - Datagrams sent query",
                    "options": {
                        "description": "UDP In / Out - Datagrams sent query",
                        "order": 224,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_OutDatagrams{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP Errors - UDP Datagrams that could not be delivered to an application query",
                    "options": {
                        "description": "UDP Errors - UDP Datagrams that could not be delivered to an application query",
                        "order": 225,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_InErrors{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP Errors - UDP Datagrams received on a port with no listener query",
                    "options": {
                        "description": "UDP Errors - UDP Datagrams received on a port with no listener query",
                        "order": 226,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_NoPorts{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP Errors - UDPLite Datagrams that could not be delivered to an application query",
                    "options": {
                        "description": "UDP Errors - UDPLite Datagrams that could not be delivered to an application query",
                        "order": 227,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_UdpLite_InErrors{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP Errors - UDP buffer errors received query",
                    "options": {
                        "description": "UDP Errors - UDP buffer errors received query",
                        "order": 228,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_RcvbufErrors{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "UDP Errors - UDP buffer errors send query",
                    "options": {
                        "description": "UDP Errors - UDP buffer errors send query",
                        "order": 229,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Udp_SndbufErrors{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP In / Out - Segments received, including those received in error. This count includes segments received on currently established connections query",
                    "options": {
                        "description": "TCP In / Out - Segments received, including those received in error. This count includes segments received on currently established connections query",
                        "order": 230,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_InSegs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP In / Out - Segments sent, including those on current connections but excluding those containing only retransmitted octets query",
                    "options": {
                        "description": "TCP In / Out - Segments sent, including those on current connections but excluding those containing only retransmitted octets query",
                        "order": 231,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_OutSegs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - Times the listen queue of a socket overflowed query",
                    "options": {
                        "description": "TCP Errors - Times the listen queue of a socket overflowed query",
                        "order": 232,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_ListenOverflows{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - SYNs to LISTEN sockets ignored query",
                    "options": {
                        "description": "TCP Errors - SYNs to LISTEN sockets ignored query",
                        "order": 233,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_ListenDrops{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - SYN-SYN/ACK retransmits to break down retransmissions in SYN, fast/timeout retransmits query",
                    "options": {
                        "description": "TCP Errors - SYN-SYN/ACK retransmits to break down retransmissions in SYN, fast/timeout retransmits query",
                        "order": 234,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_TCPSynRetrans{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - that is, the number of TCP segments transmitted containing one or more previously transmitted octets query",
                    "options": {
                        "description": "TCP Errors - that is, the number of TCP segments transmitted containing one or more previously transmitted octets query",
                        "order": 235,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_RetransSegs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - Segments received in error (e.g., bad TCP checksums) query",
                    "options": {
                        "description": "TCP Errors - Segments received in error (e.g., bad TCP checksums) query",
                        "order": 236,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_InErrs{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - Segments sent with RST flag query",
                    "options": {
                        "description": "TCP Errors - Segments sent with RST flag query",
                        "order": 237,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_OutRsts{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - Packets meant to be queued in rcv queue but dropped because socket rcvbuf limit hit query",
                    "options": {
                        "description": "TCP Errors - Packets meant to be queued in rcv queue but dropped because socket rcvbuf limit hit query",
                        "order": 238,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_TCPRcvQDrop{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Errors - TCP layer receives an out of order packet and has enough memory to queue it query",
                    "options": {
                        "description": "TCP Errors - TCP layer receives an out of order packet and has enough memory to queue it query",
                        "order": 239,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_TCPOFOQueue{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Connections - TCP connections for which the current state is either ESTABLISHED or CLOSE- WAIT query",
                    "options": {
                        "description": "TCP Connections - TCP connections for which the current state is either ESTABLISHED or CLOSE- WAIT query",
                        "order": 240,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_netstat_Tcp_CurrEstab{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Connections - Limit on the total number of TCP connections the entity can support (Dynamic is \"-1\") query",
                    "options": {
                        "description": "TCP Connections - Limit on the total number of TCP connections the entity can support (Dynamic is \"-1\") query",
                        "order": 241,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_netstat_Tcp_MaxConn{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP SynCookie - Invalid SYN cookies received query",
                    "options": {
                        "description": "TCP SynCookie - Invalid SYN cookies received query",
                        "order": 242,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_SyncookiesFailed{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP SynCookie - SYN cookies received query",
                    "options": {
                        "description": "TCP SynCookie - SYN cookies received query",
                        "order": 243,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_SyncookiesRecv{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP SynCookie - SYN cookies sent query",
                    "options": {
                        "description": "TCP SynCookie - SYN cookies sent query",
                        "order": 244,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_TcpExt_SyncookiesSent{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Direct Transition - TCP connections that have made a direct transition to the SYN-SENT state from the CLOSED state query",
                    "options": {
                        "description": "TCP Direct Transition - TCP connections that have made a direct transition to the SYN-SENT state from the CLOSED state query",
                        "order": 245,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_ActiveOpens{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Direct Transition - TCP connections that have made a direct transition to the SYN-RCVD state from the LISTEN state query",
                    "options": {
                        "description": "TCP Direct Transition - TCP connections that have made a direct transition to the SYN-RCVD state from the LISTEN state query",
                        "order": 246,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "irate(node_netstat_Tcp_PassiveOpens{instance=\"$node\",job=\"$job\"}[$__rate_interval])&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Stat - TCP sockets in established state query",
                    "options": {
                        "description": "TCP Stat - TCP sockets in established state query",
                        "order": 247,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_tcp_connection_states{state=\"established\",instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Stat - TCP sockets in fin_wait2 state query",
                    "options": {
                        "description": "TCP Stat - TCP sockets in fin_wait2 state query",
                        "order": 248,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_tcp_connection_states{state=\"fin_wait2\",instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Stat - TCP sockets in listen state query",
                    "options": {
                        "description": "TCP Stat - TCP sockets in listen state query",
                        "order": 249,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_tcp_connection_states{state=\"listen\",instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "TCP Stat - TCP sockets in time_wait state query",
                    "options": {
                        "description": "TCP Stat - TCP sockets in time_wait state query",
                        "order": 250,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_tcp_connection_states{state=\"time_wait\",instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Node Exporter Scrape Time query",
                    "options": {
                        "description": "Node Exporter Scrape Time query",
                        "order": 251,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_scrape_collector_duration_seconds{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Node Exporter Scrape - Scrape success query",
                    "options": {
                        "description": "Node Exporter Scrape - Scrape success query",
                        "order": 252,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_scrape_collector_success{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                },
                {
                    "name": "Node Exporter Scrape - Scrape textfile error (1 = true) query",
                    "options": {
                        "description": "Node Exporter Scrape - Scrape textfile error (1 = true) query",
                        "order": 253,
                        "plot": {
                            "errorColumn": "",
                            "groupBy": "",
                            "x": "Timestamp",
                            "xLabel": "Timestamp",
                            "y": [
                                "Timestamp"
                            ],
                            "yLabel": "value"
                        },
                        "upperLimit": ""
                    },
                    "query": "node_textfile_scrape_error{instance=\"$node\",job=\"$job\"}&duration=1h&step=5m",
                    "schema": ""
                }
            ],
            "title": "test1",
            "type": "metrics"
        }
    ]
}